<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\output\mdk\mpu6050.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\output\mdk\mpu6050.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6220000: Last Updated: Sat Jun 21 11:10:08 2025
<BR><P>
<H3>Maximum Stack Usage =       1032 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
mpu6050 &rArr; mpu6050_dmp_pedometer_test &rArr; mpu6050_interface_debug_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[d6]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from lto-llvm-e36e28.o(.text.BusFault_Handler) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[4a]">CAN2_RX0_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[4b]">CAN2_RX1_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[4c]">CAN2_SCE_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[49]">CAN2_TX_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[58]">DCMI_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[15]">DMA1_Stream0_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[16]">DMA1_Stream1_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[17]">DMA1_Stream2_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[18]">DMA1_Stream3_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[19]">DMA1_Stream4_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream5_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream6_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[39]">DMA1_Stream7_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[42]">DMA2_Stream0_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[43]">DMA2_Stream1_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[44]">DMA2_Stream2_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[45]">DMA2_Stream3_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[46]">DMA2_Stream4_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[4e]">DMA2_Stream5_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[4f]">DMA2_Stream6_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[50]">DMA2_Stream7_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from lto-llvm-e36e28.o(.text.DebugMon_Handler) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[47]">ETH_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[48]">ETH_WKUP_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from lto-llvm-e36e28.o(.text.EXTI0_IRQHandler) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[3a]">FMC_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[5a]">FPU_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[59]">HASH_RNG_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from lto-llvm-e36e28.o(.text.HardFault_Handler) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[53]">I2C3_ER_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[52]">I2C3_EV_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from lto-llvm-e36e28.o(.text.MemManage_Handler) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from lto-llvm-e36e28.o(.text.NMI_Handler) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[4d]">OTG_FS_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[34]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[55]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[54]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[57]">OTG_HS_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[56]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from lto-llvm-e36e28.o(.text.PendSV_Handler) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from lto-llvm-e36e28.o(.text.SVC_Handler) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from lto-llvm-e36e28.o(.text.SysTick_Handler) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[5b]">SystemInit</a> from lto-llvm-e36e28.o(.text.SystemInit) referenced from startup_stm32f407xx_mdk.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[23]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[40]">TIM6_DAC_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[36]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[60]">UART_DMAAbortOnError</a> from lto-llvm-e36e28.o(.text.UART_DMAAbortOnError) referenced 2 times from lto-llvm-e36e28.o(.text.HAL_UART_IRQHandler)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from lto-llvm-e36e28.o(.text.USART1_IRQHandler) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from lto-llvm-e36e28.o(.text.USART2_IRQHandler) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[51]">USART6_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from lto-llvm-e36e28.o(.text.UsageFault_Handler) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f407xx_mdk.o(.text) referenced from startup_stm32f407xx_mdk.o(RESET)
 <LI><a href="#[5c]">__main</a> from __main.o(!!!main) referenced from startup_stm32f407xx_mdk.o(.text)
 <LI><a href="#[5f]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[5e]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[5d]">_snputc</a> from _snputc.o(.text) referenced 2 times from vsnprintf.o(.text)
 <LI><a href="#[6f]">a_dmp_orient_callback</a> from lto-llvm-e36e28.o(.text.a_dmp_orient_callback) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050)
 <LI><a href="#[74]">a_dmp_orient_callback.930</a> from lto-llvm-e36e28.o(.text.a_dmp_orient_callback.930) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test)
 <LI><a href="#[6e]">a_dmp_tap_callback</a> from lto-llvm-e36e28.o(.text.a_dmp_tap_callback) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050)
 <LI><a href="#[73]">a_dmp_tap_callback.928</a> from lto-llvm-e36e28.o(.text.a_dmp_tap_callback.928) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test)
 <LI><a href="#[6d]">a_receive_callback</a> from lto-llvm-e36e28.o(.text.a_receive_callback) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050)
 <LI><a href="#[72]">a_receive_callback.789</a> from lto-llvm-e36e28.o(.text.a_receive_callback.789) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test)
 <LI><a href="#[75]">div</a> from div.o(.text) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_register_test)
 <LI><a href="#[61]">mpu6050</a> from lto-llvm-e36e28.o(.text.mpu6050) referenced 2 times from lto-llvm-e36e28.o(.text.main)
 <LI><a href="#[6c]">mpu6050_dmp_irq_handler</a> from lto-llvm-e36e28.o(.text.mpu6050_dmp_irq_handler) referenced 6 times from lto-llvm-e36e28.o(.text.mpu6050)
 <LI><a href="#[6b]">mpu6050_dmp_pedometer_test_irq_handler</a> from lto-llvm-e36e28.o(.text.mpu6050_dmp_pedometer_test_irq_handler) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050)
 <LI><a href="#[69]">mpu6050_dmp_read_test_irq_handler</a> from lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test_irq_handler) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050)
 <LI><a href="#[6a]">mpu6050_dmp_tap_orient_motion_test_irq_handler</a> from lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test_irq_handler) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050)
 <LI><a href="#[67]">mpu6050_interface_debug_print</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_debug_print) referenced 4 times from lto-llvm-e36e28.o(.text.mpu6050)
 <LI><a href="#[67]">mpu6050_interface_debug_print</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_debug_print) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_basic_init)
 <LI><a href="#[67]">mpu6050_interface_debug_print</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_debug_print) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_init)
 <LI><a href="#[67]">mpu6050_interface_debug_print</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_debug_print) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_pedometer_test)
 <LI><a href="#[67]">mpu6050_interface_debug_print</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_debug_print) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test)
 <LI><a href="#[67]">mpu6050_interface_debug_print</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_debug_print) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test)
 <LI><a href="#[67]">mpu6050_interface_debug_print</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_debug_print) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_fifo_init)
 <LI><a href="#[67]">mpu6050_interface_debug_print</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_debug_print) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_register_test)
 <LI><a href="#[66]">mpu6050_interface_delay_ms</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_delay_ms) referenced 4 times from lto-llvm-e36e28.o(.text.mpu6050)
 <LI><a href="#[66]">mpu6050_interface_delay_ms</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_delay_ms) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_basic_init)
 <LI><a href="#[66]">mpu6050_interface_delay_ms</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_delay_ms) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_init)
 <LI><a href="#[66]">mpu6050_interface_delay_ms</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_delay_ms) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_pedometer_test)
 <LI><a href="#[66]">mpu6050_interface_delay_ms</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_delay_ms) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test)
 <LI><a href="#[66]">mpu6050_interface_delay_ms</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_delay_ms) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test)
 <LI><a href="#[66]">mpu6050_interface_delay_ms</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_delay_ms) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_fifo_init)
 <LI><a href="#[66]">mpu6050_interface_delay_ms</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_delay_ms) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_register_test)
 <LI><a href="#[71]">mpu6050_interface_dmp_orient_callback</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_dmp_orient_callback) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test)
 <LI><a href="#[70]">mpu6050_interface_dmp_tap_callback</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_dmp_tap_callback) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test)
 <LI><a href="#[63]">mpu6050_interface_iic_deinit</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_deinit) referenced 4 times from lto-llvm-e36e28.o(.text.mpu6050)
 <LI><a href="#[63]">mpu6050_interface_iic_deinit</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_deinit) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_basic_init)
 <LI><a href="#[63]">mpu6050_interface_iic_deinit</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_deinit) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_init)
 <LI><a href="#[63]">mpu6050_interface_iic_deinit</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_deinit) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_pedometer_test)
 <LI><a href="#[63]">mpu6050_interface_iic_deinit</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_deinit) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test)
 <LI><a href="#[63]">mpu6050_interface_iic_deinit</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_deinit) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test)
 <LI><a href="#[63]">mpu6050_interface_iic_deinit</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_deinit) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_fifo_init)
 <LI><a href="#[63]">mpu6050_interface_iic_deinit</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_deinit) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_register_test)
 <LI><a href="#[62]">mpu6050_interface_iic_init</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_init) referenced 4 times from lto-llvm-e36e28.o(.text.mpu6050)
 <LI><a href="#[62]">mpu6050_interface_iic_init</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_init) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_basic_init)
 <LI><a href="#[62]">mpu6050_interface_iic_init</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_init) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_init)
 <LI><a href="#[62]">mpu6050_interface_iic_init</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_init) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_pedometer_test)
 <LI><a href="#[62]">mpu6050_interface_iic_init</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_init) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test)
 <LI><a href="#[62]">mpu6050_interface_iic_init</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_init) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test)
 <LI><a href="#[62]">mpu6050_interface_iic_init</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_init) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_fifo_init)
 <LI><a href="#[62]">mpu6050_interface_iic_init</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_init) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_register_test)
 <LI><a href="#[64]">mpu6050_interface_iic_read</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_read) referenced 4 times from lto-llvm-e36e28.o(.text.mpu6050)
 <LI><a href="#[64]">mpu6050_interface_iic_read</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_read) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_basic_init)
 <LI><a href="#[64]">mpu6050_interface_iic_read</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_read) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_init)
 <LI><a href="#[64]">mpu6050_interface_iic_read</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_read) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_pedometer_test)
 <LI><a href="#[64]">mpu6050_interface_iic_read</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_read) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test)
 <LI><a href="#[64]">mpu6050_interface_iic_read</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_read) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test)
 <LI><a href="#[64]">mpu6050_interface_iic_read</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_read) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_fifo_init)
 <LI><a href="#[64]">mpu6050_interface_iic_read</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_read) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_register_test)
 <LI><a href="#[65]">mpu6050_interface_iic_write</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_write) referenced 4 times from lto-llvm-e36e28.o(.text.mpu6050)
 <LI><a href="#[65]">mpu6050_interface_iic_write</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_write) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_basic_init)
 <LI><a href="#[65]">mpu6050_interface_iic_write</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_write) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_init)
 <LI><a href="#[65]">mpu6050_interface_iic_write</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_write) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_pedometer_test)
 <LI><a href="#[65]">mpu6050_interface_iic_write</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_write) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test)
 <LI><a href="#[65]">mpu6050_interface_iic_write</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_write) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test)
 <LI><a href="#[65]">mpu6050_interface_iic_write</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_write) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_fifo_init)
 <LI><a href="#[65]">mpu6050_interface_iic_write</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_iic_write) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_register_test)
 <LI><a href="#[68]">mpu6050_interface_receive_callback</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_receive_callback) referenced 8 times from lto-llvm-e36e28.o(.text.mpu6050)
 <LI><a href="#[68]">mpu6050_interface_receive_callback</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_receive_callback) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_basic_init)
 <LI><a href="#[68]">mpu6050_interface_receive_callback</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_receive_callback) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_pedometer_test)
 <LI><a href="#[68]">mpu6050_interface_receive_callback</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_receive_callback) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test)
 <LI><a href="#[68]">mpu6050_interface_receive_callback</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_receive_callback) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_fifo_init)
 <LI><a href="#[68]">mpu6050_interface_receive_callback</a> from lto-llvm-e36e28.o(.text.mpu6050_interface_receive_callback) referenced 2 times from lto-llvm-e36e28.o(.text.mpu6050_register_test)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5c]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(.text)
</UL>
<P><STRONG><a name="[76]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[78]"></a>__scatterload_rt2</STRONG> (Thumb, 84 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[1a5]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[1a6]"></a>__scatterload_loop</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[1a7]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[1a8]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[1a9]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, __scatter.o(!!handler_null), UNUSED)

<P><STRONG><a name="[1aa]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[79]"></a>_printf_n</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_n.o(.ARM.Collect$$_printf_percent$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount
</UL>

<P><STRONG><a name="[b7]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[7b]"></a>_printf_p</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_p.o(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_p &rArr; _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
</UL>

<P><STRONG><a name="[7d]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[7f]"></a>_printf_e</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_e.o(.ARM.Collect$$_printf_percent$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_e &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[80]"></a>_printf_g</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_g.o(.ARM.Collect$$_printf_percent$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_g &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[81]"></a>_printf_a</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_a.o(.ARM.Collect$$_printf_percent$$00000006))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _printf_a &rArr; _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[1ab]"></a>_printf_ll</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007))

<P><STRONG><a name="[83]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[85]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[86]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[87]"></a>_printf_o</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_o &rArr; _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[89]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[8b]"></a>_printf_lli</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lli &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[8d]"></a>_printf_lld</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lld &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[8e]"></a>_printf_llu</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_llu &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[8f]"></a>_printf_llo</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_llo &rArr; _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
</UL>

<P><STRONG><a name="[91]"></a>_printf_llx</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_llx &rArr; _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
</UL>

<P><STRONG><a name="[1ac]"></a>_printf_l</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_l.o(.ARM.Collect$$_printf_percent$$00000012))

<P><STRONG><a name="[93]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[95]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[97]"></a>_printf_lc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[99]"></a>_printf_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_ls &rArr; _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
</UL>

<P><STRONG><a name="[1ad]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[a7]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[9b]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[1ae]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[1af]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[9d]"></a>__rt_lib_init_rand_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_rand_2 &rArr; _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[1b0]"></a>__rt_lib_init_relocate_pie_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[1b1]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[9f]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[1b2]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))

<P><STRONG><a name="[1b3]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[a1]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[1b4]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[1b5]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[a2]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000018))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[1b6]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[1b7]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[1b8]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[1b9]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[1ba]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000034))

<P><STRONG><a name="[1bb]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[1bc]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[1bd]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[1be]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[1bf]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[1c0]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000035))

<P><STRONG><a name="[1c1]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[1c2]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000027))

<P><STRONG><a name="[ac]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[1c3]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[1c4]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[1c5]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[1c6]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[1c7]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[1c8]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[1c9]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[77]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[1ca]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[a4]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a6]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[1cb]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[a8]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; uart_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1cc]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[d7]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[ab]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[1cd]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[ad]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[12c]"></a>rand</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, rand.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx_mdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[d6]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f407xx_mdk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[af]"></a>vsnprintf</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, vsnprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_debug_print
</UL>

<P><STRONG><a name="[b1]"></a>__2snprintf</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, __2snprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2snprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[b2]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[b5]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[b8]"></a>atol</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atol &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[75]"></a>div</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, div.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = div
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e36e28.o(.text.mpu6050_register_test)
</UL>
<P><STRONG><a name="[bb]"></a>srand</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = srand
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[9e]"></a>_rand_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_rand_2
</UL>

<P><STRONG><a name="[e6]"></a>memcmp</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_load_firmware
</UL>

<P><STRONG><a name="[13f]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_debug_print
</UL>

<P><STRONG><a name="[e5]"></a>strncmp</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[e4]"></a>strcmp</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, strcmpv7em.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ce]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[1cf]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[1d0]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[1d1]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[1d2]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[bd]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
</UL>

<P><STRONG><a name="[b3]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[b4]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[be]"></a>_printf_truncate_signed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[bf]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[84]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[7a]"></a>_printf_charcount</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, _printf_charcount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n
</UL>

<P><STRONG><a name="[b0]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>

<P><STRONG><a name="[5d]"></a>_snputc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _snputc.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> __2snprintf.o(.text)
<LI> vsnprintf.o(.text)
</UL>
<P><STRONG><a name="[c1]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[94]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[96]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[c2]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, _printf_wctomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[8c]"></a>_printf_longlong_dec</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, _printf_longlong_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llu
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lld
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lli
</UL>

<P><STRONG><a name="[c5]"></a>_printf_longlong_oct</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[88]"></a>_printf_int_oct</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[90]"></a>_printf_ll_oct</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llo
</UL>

<P><STRONG><a name="[c6]"></a>_printf_longlong_hex</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[8a]"></a>_printf_int_hex</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[92]"></a>_printf_ll_hex</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llx
</UL>

<P><STRONG><a name="[7c]"></a>_printf_hex_ptr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p
</UL>

<P><STRONG><a name="[ba]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>

<P><STRONG><a name="[1d3]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[1d4]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_c16rtomb
</UL>

<P><STRONG><a name="[c4]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[c0]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[ce]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[d1]"></a>_printf_fp_hex_real</STRONG> (Thumb, 756 bytes, Stack size 72 bytes, _printf_fp_hex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[d2]"></a>_printf_lcs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[98]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[9a]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ls
</UL>

<P><STRONG><a name="[c8]"></a>_strtoul</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[d4]"></a>_c16rtomb</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, _c16rtomb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>

<P><STRONG><a name="[c3]"></a>_wcrtomb</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, _c16rtomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[e1]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_debug_print
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d5]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[1d6]"></a>__rt_memclr_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[1d7]"></a>_memset_w</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[a0]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>

<P><STRONG><a name="[d0]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[d3]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[ca]"></a>_btod_etento</STRONG> (Thumb, 224 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[aa]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[1d8]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[1d9]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[1da]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[d9]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_sdiv
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1db]"></a>_ll_udiv</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[de]"></a>__aeabi_ldivmod</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, llsdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_mpu6050_get_st_biases
</UL>

<P><STRONG><a name="[d8]"></a>_ll_sdiv</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, llsdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[e3]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1dc]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[1dd]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[1de]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.EXTI0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>SystemInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(.text)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USART1_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USART2_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx_mdk.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>main</STRONG> (Thumb, 2684 bytes, Stack size 32 bytes, lto-llvm-e36e28.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = main &rArr; uart_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[cb]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[198]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[197]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[199]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[19a]"></a>_e2e</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[cc]"></a>_btod_ediv</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[cd]"></a>_btod_emul</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[19b]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[cf]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[19d]"></a>__ARM_fpclassifyf</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fpclassifyf.o(i.__ARM_fpclassifyf))
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
</UL>

<P><STRONG><a name="[130]"></a>__hardfp_asinf</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, asinf.o(i.__hardfp_asinf))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __hardfp_asinf &rArr; sqrtf &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read
</UL>

<P><STRONG><a name="[131]"></a>__hardfp_atan2f</STRONG> (Thumb, 594 bytes, Stack size 32 bytes, atan2f.o(i.__hardfp_atan2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __hardfp_atan2f &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan2
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read
</UL>

<P><STRONG><a name="[19f]"></a>__mathlib_flt_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_infnan))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
</UL>

<P><STRONG><a name="[1a1]"></a>__mathlib_flt_infnan2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_infnan2))
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
</UL>

<P><STRONG><a name="[1a0]"></a>__mathlib_flt_invalid</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_invalid))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
</UL>

<P><STRONG><a name="[19e]"></a>__mathlib_flt_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_underflow))
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
</UL>

<P><STRONG><a name="[b6]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[19c]"></a>sqrtf</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sqrtf.o(i.sqrtf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sqrtf &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
</UL>

<P><STRONG><a name="[5f]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[a3]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _get_lc_numeric &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[1a4]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[e8]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[1a2]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[1a3]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[9c]"></a>_fp_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[1df]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[1e0]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[7e]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[82]"></a>_printf_fp_hex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf2.o(x$fpl$printf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_a
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[5e]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[c9]"></a>_fp_digits</STRONG> (Thumb, 432 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[61]"></a>mpu6050</STRONG> (Thumb, 12470 bytes, Stack size 392 bytes, lto-llvm-e36e28.o(.text.mpu6050))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032 + Unknown Stack Size
<LI>Call Chain = mpu6050 &rArr; mpu6050_dmp_pedometer_test &rArr; mpu6050_interface_debug_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_mpu6050_reset_fifo
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_read_temperature
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_bypass
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_master
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fsync_interrupt_level
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fsync_interrupt
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_extern_sync
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_read_clear
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_latch
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_pin_type
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_level
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fifo_enable
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fifo
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_accelerometer_test
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_gyroscope_test
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_deinit
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_standby_mode
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_wake_up_frequency
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_cycle_wake_up
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_gyroscope_range
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_temperature_sensor
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_accelerometer_range
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_low_pass_filter
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_pedometer_counter
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_deinit
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_sample_rate_divider
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_deinit
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_deinit
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_clock_source
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_all
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_read
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_read_temperature
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_read
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_interrupt_init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_debug_print
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e36e28.o(.text.main)
</UL>
<P><STRONG><a name="[67]"></a>mpu6050_interface_debug_print</STRONG> (Thumb, 188 bytes, Stack size 288 bytes, lto-llvm-e36e28.o(.text.mpu6050_interface_debug_print))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = mpu6050_interface_debug_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_dmp_orient_callback
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_dmp_tap_callback
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_receive_callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_receive_callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_dmp_orient_callback.930
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_dmp_tap_callback.928
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_receive_callback.789
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_dmp_orient_callback
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_dmp_tap_callback
</UL>
<BR>[Address Reference Count : 8]<UL><LI> lto-llvm-e36e28.o(.text.mpu6050)
<LI> lto-llvm-e36e28.o(.text.mpu6050_register_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_pedometer_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_basic_init)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_init)
<LI> lto-llvm-e36e28.o(.text.mpu6050_fifo_init)
</UL>
<P><STRONG><a name="[e7]"></a>mpu6050_register_test</STRONG> (Thumb, 18914 bytes, Stack size 184 bytes, lto-llvm-e36e28.o(.text.mpu6050_register_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 600 + Unknown Stack Size
<LI>Call Chain = mpu6050_register_test &rArr; mpu6050_interface_debug_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_interrupt_pin_type
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_interrupt_level
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_fifo_enable
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_accelerometer_range
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_accelerometer_test
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_gyroscope_range
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_gyroscope_test
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_low_pass_filter
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_extern_sync
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_signal_path_reset
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_fifo_count
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_wake_up_frequency
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_standby_mode
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_sleep
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_cycle_wake_up
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_temperature_sensor
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_clock_source
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_device_reset
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_device_reset
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_sensor_reset
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_sensor_reset
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_iic_master_reset
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_iic_master_reset
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_fifo_reset
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_reset
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_iic_master
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_fifo
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_sleep
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_bypass
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_master
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fsync_interrupt_level
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fsync_interrupt
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_extern_sync
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_read_clear
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_latch
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_pin_type
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_level
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fifo_enable
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fifo
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_accelerometer_test
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_gyroscope_test
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_deinit
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_standby_mode
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_wake_up_frequency
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_cycle_wake_up
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_gyroscope_range
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_temperature_sensor
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_accelerometer_range
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_low_pass_filter
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_sample_rate_divider
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_clock_source
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_debug_print
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic4_data_in
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic4_data_out
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_iic_delay
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_delay
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_iic4_transaction_mode
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic4_transaction_mode
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_iic4_interrupt
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic4_interrupt
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_iic4_enable
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic4_enable
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_iic_delay_enable
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_delay_enable
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_iic_transferred_len
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_transferred_len
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_iic_group_order
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_group_order
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_iic_transaction_mode
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_transaction_mode
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_iic_byte_swap
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_byte_swap
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_iic_enable
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_enable
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_data_out
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_register
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_iic_address
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_address
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_iic_mode
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_mode
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_iic_fifo_enable
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_fifo_enable
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_iic_read_mode
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_read_mode
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_iic_wait_for_external_sensor
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_wait_for_external_sensor
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_iic_multi_master
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_multi_master
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_iic_clock
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_clock
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_force_accel_sample
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_motion_duration
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_motion_threshold
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_accelerometer_z_test
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_accelerometer_z_test
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_accelerometer_y_test
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_accelerometer_y_test
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_accelerometer_x_test
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_accelerometer_x_test
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_gyroscope_z_test
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_gyroscope_z_test
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_gyroscope_y_test
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_gyroscope_y_test
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_gyroscope_x_test
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_gyroscope_x_test
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_interrupt
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_iic_bypass
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_fsync_interrupt
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_fsync_interrupt_level
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_interrupt_read_clear
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_interrupt_latch
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[62]"></a>mpu6050_interface_iic_init</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, lto-llvm-e36e28.o(.text.mpu6050_interface_iic_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mpu6050_interface_iic_init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Address Reference Count : 8]<UL><LI> lto-llvm-e36e28.o(.text.mpu6050)
<LI> lto-llvm-e36e28.o(.text.mpu6050_register_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_pedometer_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_basic_init)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_init)
<LI> lto-llvm-e36e28.o(.text.mpu6050_fifo_init)
</UL>
<P><STRONG><a name="[63]"></a>mpu6050_interface_iic_deinit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lto-llvm-e36e28.o(.text.mpu6050_interface_iic_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = mpu6050_interface_iic_deinit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Address Reference Count : 8]<UL><LI> lto-llvm-e36e28.o(.text.mpu6050)
<LI> lto-llvm-e36e28.o(.text.mpu6050_register_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_pedometer_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_basic_init)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_init)
<LI> lto-llvm-e36e28.o(.text.mpu6050_fifo_init)
</UL>
<P><STRONG><a name="[64]"></a>mpu6050_interface_iic_read</STRONG> (Thumb, 1792 bytes, Stack size 40 bytes, lto-llvm-e36e28.o(.text.mpu6050_interface_iic_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = mpu6050_interface_iic_read &rArr; a_iic_read_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_iic_read_byte
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_iic_send_byte
</UL>
<BR>[Address Reference Count : 8]<UL><LI> lto-llvm-e36e28.o(.text.mpu6050)
<LI> lto-llvm-e36e28.o(.text.mpu6050_register_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_pedometer_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_basic_init)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_init)
<LI> lto-llvm-e36e28.o(.text.mpu6050_fifo_init)
</UL>
<P><STRONG><a name="[65]"></a>mpu6050_interface_iic_write</STRONG> (Thumb, 1498 bytes, Stack size 40 bytes, lto-llvm-e36e28.o(.text.mpu6050_interface_iic_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mpu6050_interface_iic_write &rArr; a_iic_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_iic_send_byte
</UL>
<BR>[Address Reference Count : 8]<UL><LI> lto-llvm-e36e28.o(.text.mpu6050)
<LI> lto-llvm-e36e28.o(.text.mpu6050_register_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_pedometer_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_basic_init)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_init)
<LI> lto-llvm-e36e28.o(.text.mpu6050_fifo_init)
</UL>
<P><STRONG><a name="[66]"></a>mpu6050_interface_delay_ms</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.mpu6050_interface_delay_ms))
<BR>[Address Reference Count : 8]<UL><LI> lto-llvm-e36e28.o(.text.mpu6050)
<LI> lto-llvm-e36e28.o(.text.mpu6050_register_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_pedometer_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_basic_init)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_init)
<LI> lto-llvm-e36e28.o(.text.mpu6050_fifo_init)
</UL>
<P><STRONG><a name="[68]"></a>mpu6050_interface_receive_callback</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.mpu6050_interface_receive_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = mpu6050_interface_receive_callback &rArr; mpu6050_interface_debug_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_debug_print
</UL>
<BR>[Address Reference Count : 6]<UL><LI> lto-llvm-e36e28.o(.text.mpu6050)
<LI> lto-llvm-e36e28.o(.text.mpu6050_register_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_pedometer_test)
<LI> lto-llvm-e36e28.o(.text.mpu6050_basic_init)
<LI> lto-llvm-e36e28.o(.text.mpu6050_fifo_init)
</UL>
<P><STRONG><a name="[e9]"></a>mpu6050_init</STRONG> (Thumb, 296 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_init
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[e0]"></a>HAL_GPIO_Init</STRONG> (Thumb, 408 bytes, Stack size 48 bytes, lto-llvm-e36e28.o(.text.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_interrupt_init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_iic_init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[df]"></a>gpio_interrupt_init</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, lto-llvm-e36e28.o(.text.gpio_interrupt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gpio_interrupt_init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[69]"></a>mpu6050_dmp_read_test_irq_handler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mpu6050_dmp_read_test_irq_handler &rArr; mpu6050_irq_handler &rArr; a_mpu6050_reset_fifo
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e36e28.o(.text.mpu6050)
</UL>
<P><STRONG><a name="[ea]"></a>mpu6050_dmp_read_test</STRONG> (Thumb, 4684 bytes, Stack size 224 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = mpu6050_dmp_read_test &rArr; mpu6050_interface_debug_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_mpu6050_reset_fifo
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_bypass
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_master
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fsync_interrupt_level
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fsync_interrupt
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_extern_sync
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_read_clear
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_latch
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_pin_type
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_level
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fifo_enable
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fifo
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_accelerometer_test
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_gyroscope_test
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_deinit
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_standby_mode
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_wake_up_frequency
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_cycle_wake_up
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_gyroscope_range
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_temperature_sensor
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_accelerometer_range
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_low_pass_filter
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_sample_rate_divider
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_clock_source
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_debug_print
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_enable
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_gyro_bias
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_accel_bias
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_gyro_accel_raw_offset_convert
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_feature
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_orientation
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_interrupt_mode
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_6x_quaternion
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_3x_quaternion
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_gyro_calibrate
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_fifo_rate
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_fifo_rate
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_tap_thresh
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_tap_thresh
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_tap_axes
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_tap_axes
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_min_tap_count
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_min_tap_count
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_tap_time
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_tap_time
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_tap_time_multi
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_tap_time_multi
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_shake_reject_thresh
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_shake_reject_thresh
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_shake_reject_time
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_shake_reject_time
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_shake_reject_timeout
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_shake_reject_timeout
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_pedometer_step_count
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_pedometer_step_count
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_pedometer_walk_time
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_pedometer_walk_time
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_load_firmware
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_self_test
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[eb]"></a>HAL_GPIO_DeInit</STRONG> (Thumb, 402 bytes, Stack size 44 bytes, lto-llvm-e36e28.o(.text.HAL_GPIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_iic_deinit
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[6a]"></a>mpu6050_dmp_tap_orient_motion_test_irq_handler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mpu6050_dmp_tap_orient_motion_test_irq_handler &rArr; mpu6050_irq_handler &rArr; a_mpu6050_reset_fifo
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e36e28.o(.text.mpu6050)
</UL>
<P><STRONG><a name="[ec]"></a>mpu6050_dmp_tap_orient_motion_test</STRONG> (Thumb, 4572 bytes, Stack size 224 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = mpu6050_dmp_tap_orient_motion_test &rArr; mpu6050_interface_debug_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_mpu6050_reset_fifo
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_bypass
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_master
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fsync_interrupt_level
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fsync_interrupt
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_extern_sync
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_read_clear
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_latch
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_pin_type
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_level
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fifo_enable
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fifo
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_accelerometer_test
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_gyroscope_test
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_deinit
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_standby_mode
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_wake_up_frequency
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_cycle_wake_up
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_gyroscope_range
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_temperature_sensor
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_accelerometer_range
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_low_pass_filter
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_sample_rate_divider
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_clock_source
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_debug_print
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_enable
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_gyro_bias
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_accel_bias
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_gyro_accel_raw_offset_convert
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_feature
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_orientation
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_interrupt_mode
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_6x_quaternion
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_3x_quaternion
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_gyro_calibrate
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_fifo_rate
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_fifo_rate
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_tap_thresh
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_tap_thresh
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_tap_axes
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_tap_axes
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_min_tap_count
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_min_tap_count
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_tap_time
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_tap_time
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_tap_time_multi
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_tap_time_multi
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_shake_reject_thresh
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_shake_reject_thresh
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_shake_reject_time
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_shake_reject_time
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_shake_reject_timeout
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_shake_reject_timeout
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_pedometer_step_count
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_pedometer_step_count
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_pedometer_walk_time
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_pedometer_walk_time
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_load_firmware
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_self_test
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_force_accel_sample
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_motion_duration
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_motion_threshold
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[6b]"></a>mpu6050_dmp_pedometer_test_irq_handler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_pedometer_test_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mpu6050_dmp_pedometer_test_irq_handler &rArr; mpu6050_irq_handler &rArr; a_mpu6050_reset_fifo
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e36e28.o(.text.mpu6050)
</UL>
<P><STRONG><a name="[ed]"></a>mpu6050_dmp_pedometer_test</STRONG> (Thumb, 2612 bytes, Stack size 224 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_pedometer_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = mpu6050_dmp_pedometer_test &rArr; mpu6050_interface_debug_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_mpu6050_reset_fifo
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_bypass
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_master
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fsync_interrupt_level
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fsync_interrupt
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_extern_sync
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_read_clear
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_latch
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_pin_type
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_level
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fifo_enable
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fifo
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_accelerometer_test
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_gyroscope_test
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_deinit
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_standby_mode
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_wake_up_frequency
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_cycle_wake_up
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_gyroscope_range
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_temperature_sensor
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_accelerometer_range
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_low_pass_filter
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_sample_rate_divider
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_clock_source
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_debug_print
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_enable
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_gyro_bias
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_accel_bias
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_gyro_accel_raw_offset_convert
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_feature
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_interrupt_mode
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_fifo_rate
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_fifo_rate
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_pedometer_step_count
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_pedometer_step_count
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_get_pedometer_walk_time
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_pedometer_walk_time
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_load_firmware
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_self_test
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[ee]"></a>mpu6050_basic_init</STRONG> (Thumb, 1390 bytes, Stack size 32 bytes, lto-llvm-e36e28.o(.text.mpu6050_basic_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = mpu6050_basic_init &rArr; mpu6050_interface_debug_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_bypass
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_master
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fsync_interrupt_level
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fsync_interrupt
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_extern_sync
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_read_clear
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_latch
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_pin_type
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_level
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fifo_enable
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fifo
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_accelerometer_test
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_gyroscope_test
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_deinit
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_standby_mode
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_wake_up_frequency
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_cycle_wake_up
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_gyroscope_range
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_temperature_sensor
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_accelerometer_range
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_low_pass_filter
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_sample_rate_divider
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_debug_print
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[ef]"></a>mpu6050_basic_read</STRONG> (Thumb, 68 bytes, Stack size 64 bytes, lto-llvm-e36e28.o(.text.mpu6050_basic_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = mpu6050_basic_read &rArr; mpu6050_read
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_read
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[f0]"></a>mpu6050_basic_read_temperature</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_basic_read_temperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_basic_read_temperature
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[f1]"></a>mpu6050_fifo_init</STRONG> (Thumb, 1438 bytes, Stack size 32 bytes, lto-llvm-e36e28.o(.text.mpu6050_fifo_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = mpu6050_fifo_init &rArr; mpu6050_interface_debug_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_mpu6050_reset_fifo
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_bypass
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_master
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fsync_interrupt_level
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fsync_interrupt
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_extern_sync
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_read_clear
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_latch
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_pin_type
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_level
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fifo_enable
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fifo
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_accelerometer_test
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_gyroscope_test
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_deinit
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_standby_mode
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_wake_up_frequency
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_cycle_wake_up
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_gyroscope_range
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_temperature_sensor
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_accelerometer_range
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_low_pass_filter
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_sample_rate_divider
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_debug_print
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[f2]"></a>mpu6050_read</STRONG> (Thumb, 1000 bytes, Stack size 64 bytes, lto-llvm-e36e28.o(.text.mpu6050_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mpu6050_read
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_read
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[6c]"></a>mpu6050_dmp_irq_handler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mpu6050_dmp_irq_handler &rArr; mpu6050_irq_handler &rArr; a_mpu6050_reset_fifo
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e36e28.o(.text.mpu6050)
</UL>
<P><STRONG><a name="[f3]"></a>mpu6050_dmp_init</STRONG> (Thumb, 2094 bytes, Stack size 80 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = mpu6050_dmp_init &rArr; mpu6050_interface_debug_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_mpu6050_reset_fifo
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_bypass
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_iic_master
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fsync_interrupt_level
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fsync_interrupt
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_extern_sync
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_read_clear
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_latch
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_pin_type
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_interrupt_level
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fifo_enable
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_fifo
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_accelerometer_test
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_gyroscope_test
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_deinit
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_standby_mode
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_wake_up_frequency
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_cycle_wake_up
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_gyroscope_range
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_temperature_sensor
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_accelerometer_range
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_low_pass_filter
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_sample_rate_divider
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_clock_source
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_debug_print
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_enable
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_gyro_bias
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_accel_bias
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_gyro_accel_raw_offset_convert
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_feature
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_orientation
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_interrupt_mode
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_fifo_rate
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_tap_thresh
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_tap_axes
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_min_tap_count
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_tap_time
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_tap_time_multi
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_shake_reject_thresh
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_shake_reject_time
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_shake_reject_timeout
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_pedometer_step_count
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_pedometer_walk_time
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_load_firmware
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_self_test
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_force_accel_sample
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_motion_duration
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_set_motion_threshold
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[f4]"></a>mpu6050_dmp_read_all</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_read_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = mpu6050_dmp_read_all &rArr; mpu6050_dmp_read &rArr; __hardfp_atan2f &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[f5]"></a>mpu6050_set_clock_source</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_clock_source))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_clock_source
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[6d]"></a>a_receive_callback</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.a_receive_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = a_receive_callback &rArr; mpu6050_interface_debug_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_debug_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e36e28.o(.text.mpu6050)
</UL>
<P><STRONG><a name="[6e]"></a>a_dmp_tap_callback</STRONG> (Thumb, 198 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.a_dmp_tap_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = a_dmp_tap_callback &rArr; mpu6050_interface_debug_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_debug_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e36e28.o(.text.mpu6050)
</UL>
<P><STRONG><a name="[6f]"></a>a_dmp_orient_callback</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.a_dmp_orient_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = a_dmp_orient_callback &rArr; mpu6050_interface_debug_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_debug_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e36e28.o(.text.mpu6050)
</UL>
<P><STRONG><a name="[f6]"></a>mpu6050_basic_deinit</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_basic_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_basic_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[f7]"></a>mpu6050_fifo_deinit</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_fifo_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_fifo_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[f8]"></a>mpu6050_set_sample_rate_divider</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_sample_rate_divider))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_sample_rate_divider
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[f9]"></a>mpu6050_dmp_deinit</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[fa]"></a>mpu6050_dmp_get_pedometer_counter</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_get_pedometer_counter))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_get_pedometer_counter
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[fb]"></a>mpu6050_set_low_pass_filter</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_low_pass_filter))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_low_pass_filter
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[fc]"></a>mpu6050_set_accelerometer_range</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_accelerometer_range))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_accelerometer_range
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[fd]"></a>mpu6050_set_temperature_sensor</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_temperature_sensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_temperature_sensor
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[fe]"></a>mpu6050_set_gyroscope_range</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_gyroscope_range))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_gyroscope_range
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[ff]"></a>mpu6050_set_cycle_wake_up</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_cycle_wake_up))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_cycle_wake_up
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[100]"></a>mpu6050_set_wake_up_frequency</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_wake_up_frequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_wake_up_frequency
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[101]"></a>mpu6050_set_standby_mode</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_standby_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mpu6050_set_standby_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[102]"></a>mpu6050_deinit</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, lto-llvm-e36e28.o(.text.mpu6050_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mpu6050_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[103]"></a>mpu6050_set_gyroscope_test</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_gyroscope_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mpu6050_set_gyroscope_test
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[104]"></a>mpu6050_set_accelerometer_test</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_accelerometer_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mpu6050_set_accelerometer_test
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[105]"></a>mpu6050_set_fifo</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_fifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_fifo
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[106]"></a>mpu6050_set_fifo_enable</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_fifo_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mpu6050_set_fifo_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[107]"></a>mpu6050_set_interrupt_level</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_interrupt_level))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_interrupt_level
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[108]"></a>mpu6050_set_interrupt_pin_type</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_interrupt_pin_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_interrupt_pin_type
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[109]"></a>mpu6050_set_interrupt</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mpu6050_set_interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[10a]"></a>mpu6050_set_interrupt_latch</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_interrupt_latch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_interrupt_latch
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[10b]"></a>mpu6050_set_interrupt_read_clear</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_interrupt_read_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_interrupt_read_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[10c]"></a>mpu6050_set_extern_sync</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_extern_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_extern_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[10d]"></a>mpu6050_set_fsync_interrupt</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_fsync_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_fsync_interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[10e]"></a>mpu6050_set_fsync_interrupt_level</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_fsync_interrupt_level))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_fsync_interrupt_level
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[10f]"></a>mpu6050_set_iic_master</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic_master))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_iic_master
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[110]"></a>mpu6050_set_iic_bypass</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic_bypass))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_iic_bypass
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_basic_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[111]"></a>mpu6050_read_temperature</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_read_temperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_read_temperature
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
</UL>

<P><STRONG><a name="[112]"></a>a_mpu6050_reset_fifo</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.a_mpu6050_reset_fifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = a_mpu6050_reset_fifo
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_fifo_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_feature
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_6x_quaternion
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_3x_quaternion
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_irq_handler
</UL>

<P><STRONG><a name="[e2]"></a>uart_print</STRONG> (Thumb, 188 bytes, Stack size 288 bytes, lto-llvm-e36e28.o(.text.uart_print))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = uart_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[da]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 1458 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_UART_IRQHandler &rArr; UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[142]"></a>mpu6050_set_sleep</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_sleep
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[143]"></a>mpu6050_get_fifo</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_fifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_fifo
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[144]"></a>mpu6050_get_iic_master</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_iic_master))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_iic_master
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[145]"></a>mpu6050_fifo_reset</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_fifo_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_fifo_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[146]"></a>mpu6050_get_fifo_reset</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_fifo_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_fifo_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[147]"></a>mpu6050_iic_master_reset</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_iic_master_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_iic_master_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[148]"></a>mpu6050_get_iic_master_reset</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_iic_master_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_iic_master_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[149]"></a>mpu6050_sensor_reset</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_sensor_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_sensor_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[14a]"></a>mpu6050_get_sensor_reset</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_sensor_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_sensor_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[14b]"></a>mpu6050_device_reset</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_device_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_device_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[14c]"></a>mpu6050_get_device_reset</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_device_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_device_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[14d]"></a>mpu6050_get_clock_source</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_clock_source))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_clock_source
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[14e]"></a>mpu6050_get_temperature_sensor</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_temperature_sensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_temperature_sensor
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[14f]"></a>mpu6050_get_cycle_wake_up</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_cycle_wake_up))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_cycle_wake_up
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[150]"></a>mpu6050_get_sleep</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_sleep
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[151]"></a>mpu6050_get_standby_mode</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_standby_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_standby_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[152]"></a>mpu6050_get_wake_up_frequency</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_wake_up_frequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_wake_up_frequency
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[153]"></a>mpu6050_get_fifo_count</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_fifo_count))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_fifo_count
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[154]"></a>mpu6050_set_signal_path_reset</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_signal_path_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_signal_path_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[155]"></a>mpu6050_get_extern_sync</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_extern_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_extern_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[156]"></a>mpu6050_get_low_pass_filter</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_low_pass_filter))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_low_pass_filter
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[157]"></a>mpu6050_get_gyroscope_test</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_gyroscope_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_gyroscope_test
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[158]"></a>mpu6050_get_gyroscope_range</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_gyroscope_range))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_gyroscope_range
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[159]"></a>mpu6050_get_accelerometer_test</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_accelerometer_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_accelerometer_test
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[15a]"></a>mpu6050_get_accelerometer_range</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_accelerometer_range))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_accelerometer_range
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[15b]"></a>mpu6050_get_fifo_enable</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_fifo_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_fifo_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[15c]"></a>mpu6050_get_interrupt_level</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_interrupt_level))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_interrupt_level
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[15d]"></a>mpu6050_get_interrupt_pin_type</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_interrupt_pin_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_interrupt_pin_type
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[15e]"></a>mpu6050_get_interrupt_latch</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_interrupt_latch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_interrupt_latch
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[15f]"></a>mpu6050_get_interrupt_read_clear</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_interrupt_read_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_interrupt_read_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[160]"></a>mpu6050_get_fsync_interrupt_level</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_fsync_interrupt_level))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_fsync_interrupt_level
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[161]"></a>mpu6050_get_fsync_interrupt</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_fsync_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_fsync_interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[162]"></a>mpu6050_get_iic_bypass</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_iic_bypass))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_iic_bypass
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[163]"></a>mpu6050_get_interrupt</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[164]"></a>mpu6050_set_gyroscope_x_test</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_gyroscope_x_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_gyroscope_x_test
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[165]"></a>mpu6050_get_gyroscope_x_test</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_gyroscope_x_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mpu6050_get_gyroscope_x_test
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[166]"></a>mpu6050_set_gyroscope_y_test</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_gyroscope_y_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_gyroscope_y_test
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[167]"></a>mpu6050_get_gyroscope_y_test</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_gyroscope_y_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mpu6050_get_gyroscope_y_test
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[168]"></a>mpu6050_set_gyroscope_z_test</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_gyroscope_z_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_gyroscope_z_test
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[169]"></a>mpu6050_get_gyroscope_z_test</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_gyroscope_z_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mpu6050_get_gyroscope_z_test
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[16a]"></a>mpu6050_set_accelerometer_x_test</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_accelerometer_x_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_accelerometer_x_test
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[16b]"></a>mpu6050_get_accelerometer_x_test</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_accelerometer_x_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_accelerometer_x_test
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[16c]"></a>mpu6050_set_accelerometer_y_test</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_accelerometer_y_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_accelerometer_y_test
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[16d]"></a>mpu6050_get_accelerometer_y_test</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_accelerometer_y_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_accelerometer_y_test
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[16e]"></a>mpu6050_set_accelerometer_z_test</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_accelerometer_z_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_accelerometer_z_test
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[16f]"></a>mpu6050_get_accelerometer_z_test</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_accelerometer_z_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_accelerometer_z_test
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[114]"></a>mpu6050_set_motion_threshold</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_motion_threshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_motion_threshold
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[115]"></a>mpu6050_set_motion_duration</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_motion_duration))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_motion_duration
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[116]"></a>mpu6050_set_force_accel_sample</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_force_accel_sample))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_force_accel_sample
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[170]"></a>mpu6050_set_iic_clock</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic_clock))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_iic_clock
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[171]"></a>mpu6050_get_iic_clock</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_iic_clock))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_iic_clock
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[172]"></a>mpu6050_set_iic_multi_master</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic_multi_master))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_iic_multi_master
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[173]"></a>mpu6050_get_iic_multi_master</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_iic_multi_master))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_iic_multi_master
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[174]"></a>mpu6050_set_iic_wait_for_external_sensor</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic_wait_for_external_sensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_iic_wait_for_external_sensor
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[175]"></a>mpu6050_get_iic_wait_for_external_sensor</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_iic_wait_for_external_sensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_iic_wait_for_external_sensor
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[176]"></a>mpu6050_set_iic_read_mode</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic_read_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_iic_read_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[177]"></a>mpu6050_get_iic_read_mode</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_iic_read_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_iic_read_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[178]"></a>mpu6050_set_iic_fifo_enable</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic_fifo_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mpu6050_set_iic_fifo_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[179]"></a>mpu6050_get_iic_fifo_enable</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_iic_fifo_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_iic_fifo_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[17a]"></a>mpu6050_set_iic_mode</STRONG> (Thumb, 386 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_iic_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[17b]"></a>mpu6050_get_iic_mode</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_iic_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_iic_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[17c]"></a>mpu6050_set_iic_address</STRONG> (Thumb, 398 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic_address))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_iic_address
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[17d]"></a>mpu6050_get_iic_address</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_iic_address))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_iic_address
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[17e]"></a>mpu6050_set_iic_register</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_iic_register
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[17f]"></a>mpu6050_set_iic_data_out</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic_data_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_iic_data_out
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[180]"></a>mpu6050_set_iic_enable</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_iic_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[181]"></a>mpu6050_get_iic_enable</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_iic_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_iic_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[182]"></a>mpu6050_set_iic_byte_swap</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic_byte_swap))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_iic_byte_swap
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[183]"></a>mpu6050_get_iic_byte_swap</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_iic_byte_swap))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_iic_byte_swap
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[184]"></a>mpu6050_set_iic_transaction_mode</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic_transaction_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_iic_transaction_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[185]"></a>mpu6050_get_iic_transaction_mode</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_iic_transaction_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_iic_transaction_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[186]"></a>mpu6050_set_iic_group_order</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic_group_order))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_iic_group_order
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[187]"></a>mpu6050_get_iic_group_order</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_iic_group_order))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_iic_group_order
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[188]"></a>mpu6050_set_iic_transferred_len</STRONG> (Thumb, 348 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic_transferred_len))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_iic_transferred_len
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[189]"></a>mpu6050_get_iic_transferred_len</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_iic_transferred_len))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_iic_transferred_len
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[18a]"></a>mpu6050_set_iic_delay_enable</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic_delay_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mpu6050_set_iic_delay_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[18b]"></a>mpu6050_get_iic_delay_enable</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_iic_delay_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_iic_delay_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[18c]"></a>mpu6050_set_iic4_enable</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic4_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_iic4_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[18d]"></a>mpu6050_get_iic4_enable</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_iic4_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_iic4_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[18e]"></a>mpu6050_set_iic4_interrupt</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic4_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_iic4_interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[18f]"></a>mpu6050_get_iic4_interrupt</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_iic4_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_iic4_interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[190]"></a>mpu6050_set_iic4_transaction_mode</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic4_transaction_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_iic4_transaction_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[191]"></a>mpu6050_get_iic4_transaction_mode</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_iic4_transaction_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_iic4_transaction_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[192]"></a>mpu6050_set_iic_delay</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_set_iic_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[193]"></a>mpu6050_get_iic_delay</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_get_iic_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_get_iic_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[194]"></a>mpu6050_set_iic4_data_out</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic4_data_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mpu6050_set_iic4_data_out
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[195]"></a>mpu6050_set_iic4_data_in</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lto-llvm-e36e28.o(.text.mpu6050_set_iic4_data_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mpu6050_set_iic4_data_in
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_register_test
</UL>

<P><STRONG><a name="[12a]"></a>mpu6050_irq_handler</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, lto-llvm-e36e28.o(.text.mpu6050_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mpu6050_irq_handler &rArr; a_mpu6050_reset_fifo
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_mpu6050_reset_fifo
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_irq_handler
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test_irq_handler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test_irq_handler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test_irq_handler
</UL>

<P><STRONG><a name="[113]"></a>mpu6050_self_test</STRONG> (Thumb, 904 bytes, Stack size 56 bytes, lto-llvm-e36e28.o(.text.mpu6050_self_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = mpu6050_self_test &rArr; a_mpu6050_get_st_biases &rArr; __aeabi_ldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_mpu6050_gyro_self_test
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_mpu6050_get_st_biases
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[117]"></a>mpu6050_dmp_load_firmware</STRONG> (Thumb, 316 bytes, Stack size 56 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_load_firmware))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mpu6050_dmp_load_firmware &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[11d]"></a>mpu6050_dmp_set_pedometer_walk_time</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_set_pedometer_walk_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_set_pedometer_walk_time
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[12b]"></a>mpu6050_dmp_get_pedometer_walk_time</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_get_pedometer_walk_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_get_pedometer_walk_time
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[11e]"></a>mpu6050_dmp_set_pedometer_step_count</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_set_pedometer_step_count))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_set_pedometer_step_count
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[12d]"></a>mpu6050_dmp_get_pedometer_step_count</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_get_pedometer_step_count))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_get_pedometer_step_count
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[11f]"></a>mpu6050_dmp_set_shake_reject_timeout</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_set_shake_reject_timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_set_shake_reject_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[133]"></a>mpu6050_dmp_get_shake_reject_timeout</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_get_shake_reject_timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_get_shake_reject_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[120]"></a>mpu6050_dmp_set_shake_reject_time</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_set_shake_reject_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_set_shake_reject_time
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[134]"></a>mpu6050_dmp_get_shake_reject_time</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_get_shake_reject_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_get_shake_reject_time
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[121]"></a>mpu6050_dmp_set_shake_reject_thresh</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_set_shake_reject_thresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_set_shake_reject_thresh
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[135]"></a>mpu6050_dmp_get_shake_reject_thresh</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_get_shake_reject_thresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_get_shake_reject_thresh
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[122]"></a>mpu6050_dmp_set_tap_time_multi</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_set_tap_time_multi))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_set_tap_time_multi
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[136]"></a>mpu6050_dmp_get_tap_time_multi</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_get_tap_time_multi))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_get_tap_time_multi
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[123]"></a>mpu6050_dmp_set_tap_time</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_set_tap_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_set_tap_time
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[137]"></a>mpu6050_dmp_get_tap_time</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_get_tap_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_get_tap_time
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[124]"></a>mpu6050_dmp_set_min_tap_count</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_set_min_tap_count))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_set_min_tap_count
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[138]"></a>mpu6050_dmp_get_min_tap_count</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_get_min_tap_count))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_get_min_tap_count
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[118]"></a>mpu6050_dmp_set_tap_axes</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_set_tap_axes))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mpu6050_dmp_set_tap_axes
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[139]"></a>mpu6050_dmp_get_tap_axes</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_get_tap_axes))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_get_tap_axes
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[125]"></a>mpu6050_dmp_set_tap_thresh</STRONG> (Thumb, 296 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_set_tap_thresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mpu6050_dmp_set_tap_thresh &rArr; a_mpu6050_write_mem
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_mpu6050_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[13a]"></a>mpu6050_dmp_get_tap_thresh</STRONG> (Thumb, 284 bytes, Stack size 40 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_get_tap_thresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mpu6050_dmp_get_tap_thresh
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[119]"></a>mpu6050_dmp_set_fifo_rate</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_set_fifo_rate))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mpu6050_dmp_set_fifo_rate
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[12e]"></a>mpu6050_dmp_get_fifo_rate</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_get_fifo_rate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_get_fifo_rate
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[13b]"></a>mpu6050_dmp_set_gyro_calibrate</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_set_gyro_calibrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mpu6050_dmp_set_gyro_calibrate
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[13c]"></a>mpu6050_dmp_set_3x_quaternion</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_set_3x_quaternion))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mpu6050_dmp_set_3x_quaternion &rArr; a_mpu6050_reset_fifo
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_mpu6050_reset_fifo
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[13d]"></a>mpu6050_dmp_set_6x_quaternion</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_set_6x_quaternion))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mpu6050_dmp_set_6x_quaternion &rArr; a_mpu6050_reset_fifo
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_mpu6050_reset_fifo
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[11a]"></a>mpu6050_dmp_set_interrupt_mode</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_set_interrupt_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mpu6050_dmp_set_interrupt_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[11b]"></a>mpu6050_dmp_set_orientation</STRONG> (Thumb, 566 bytes, Stack size 40 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_set_orientation))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mpu6050_dmp_set_orientation &rArr; a_mpu6050_write_mem
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_mpu6050_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[11c]"></a>mpu6050_dmp_set_feature</STRONG> (Thumb, 1140 bytes, Stack size 48 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_set_feature))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = mpu6050_dmp_set_feature &rArr; a_mpu6050_reset_fifo
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_mpu6050_reset_fifo
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_mpu6050_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[70]"></a>mpu6050_interface_dmp_tap_callback</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.mpu6050_interface_dmp_tap_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = mpu6050_interface_dmp_tap_callback &rArr; mpu6050_interface_debug_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_debug_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test)
</UL>
<P><STRONG><a name="[71]"></a>mpu6050_interface_dmp_orient_callback</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.mpu6050_interface_dmp_orient_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = mpu6050_interface_dmp_orient_callback &rArr; mpu6050_interface_debug_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_debug_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_read_test)
</UL>
<P><STRONG><a name="[126]"></a>mpu6050_dmp_gyro_accel_raw_offset_convert</STRONG> (Thumb, 340 bytes, Stack size 32 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_gyro_accel_raw_offset_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mpu6050_dmp_gyro_accel_raw_offset_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[127]"></a>mpu6050_dmp_set_accel_bias</STRONG> (Thumb, 400 bytes, Stack size 48 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_set_accel_bias))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mpu6050_dmp_set_accel_bias
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[128]"></a>mpu6050_dmp_set_gyro_bias</STRONG> (Thumb, 368 bytes, Stack size 40 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_set_gyro_bias))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mpu6050_dmp_set_gyro_bias
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[129]"></a>mpu6050_dmp_set_enable</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_set_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mpu6050_dmp_set_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[12f]"></a>mpu6050_dmp_read</STRONG> (Thumb, 1308 bytes, Stack size 144 bytes, lto-llvm-e36e28.o(.text.mpu6050_dmp_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = mpu6050_dmp_read &rArr; __hardfp_atan2f &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_mpu6050_reset_fifo
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a_mpu6050_dmp_decode_gesture
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_all
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_pedometer_test
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_tap_orient_motion_test
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read_test
</UL>

<P><STRONG><a name="[72]"></a>a_receive_callback.789</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.a_receive_callback.789))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = a_receive_callback.789 &rArr; mpu6050_interface_debug_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_debug_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test)
</UL>
<P><STRONG><a name="[73]"></a>a_dmp_tap_callback.928</STRONG> (Thumb, 198 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.a_dmp_tap_callback.928))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = a_dmp_tap_callback.928 &rArr; mpu6050_interface_debug_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_debug_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test)
</UL>
<P><STRONG><a name="[74]"></a>a_dmp_orient_callback.930</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lto-llvm-e36e28.o(.text.a_dmp_orient_callback.930))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = a_dmp_orient_callback.930 &rArr; mpu6050_interface_debug_print &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_debug_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e36e28.o(.text.mpu6050_dmp_tap_orient_motion_test)
</UL>
<P><STRONG><a name="[13e]"></a>a_mpu6050_write_mem</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.a_mpu6050_write_mem))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = a_mpu6050_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_feature
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_orientation
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_set_tap_thresh
</UL>

<P><STRONG><a name="[132]"></a>a_mpu6050_dmp_decode_gesture</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lto-llvm-e36e28.o(.text.a_mpu6050_dmp_decode_gesture))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = a_mpu6050_dmp_decode_gesture
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_dmp_read
</UL>

<P><STRONG><a name="[dd]"></a>a_mpu6050_get_st_biases</STRONG> (Thumb, 760 bytes, Stack size 48 bytes, lto-llvm-e36e28.o(.text.a_mpu6050_get_st_biases))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = a_mpu6050_get_st_biases &rArr; __aeabi_ldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_self_test
</UL>

<P><STRONG><a name="[196]"></a>a_mpu6050_gyro_self_test</STRONG> (Thumb, 656 bytes, Stack size 24 bytes, lto-llvm-e36e28.o(.text.a_mpu6050_gyro_self_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = a_mpu6050_gyro_self_test
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_self_test
</UL>

<P><STRONG><a name="[140]"></a>a_iic_send_byte</STRONG> (Thumb, 1710 bytes, Stack size 16 bytes, lto-llvm-e36e28.o(.text.a_iic_send_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = a_iic_send_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_iic_write
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_iic_read
</UL>

<P><STRONG><a name="[141]"></a>a_iic_read_byte</STRONG> (Thumb, 1590 bytes, Stack size 52 bytes, lto-llvm-e36e28.o(.text.a_iic_read_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = a_iic_read_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_interface_iic_read
</UL>

<P><STRONG><a name="[dc]"></a>HAL_DMA_Abort</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, lto-llvm-e36e28.o(.text.HAL_DMA_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMA_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[db]"></a>UART_Receive_IT</STRONG> (Thumb, 530 bytes, Stack size 12 bytes, lto-llvm-e36e28.o(.text.UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[60]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, lto-llvm-e36e28.o(.text.UART_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UART_DMAAbortOnError
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e36e28.o(.text.HAL_UART_IRQHandler)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
